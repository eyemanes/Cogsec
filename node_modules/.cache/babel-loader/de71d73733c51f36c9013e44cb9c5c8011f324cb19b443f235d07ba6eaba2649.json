{"ast":null,"code":"import React,{useState,useEffect,useRef}from'react';import'./ConnectSection.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const ConnectSection=()=>{const[messages,setMessages]=useState([{id:1,user:\"Agent_Zero\",text:\"New member orientation at 1400 hours. Bring your neural dampeners.\",time:\"14:32\",type:\"system\"},{id:2,user:\"MindGuard\",text:\"Detected unusual AI activity in sector 7. All units maintain cognitive barriers.\",time:\"14:35\",type:\"warning\"},{id:3,user:\"ThoughtShield\",text:\"Successfully repelled intrusion attempt. New defense patterns uploaded to mainframe.\",time:\"14:37\",type:\"success\"}]);const[newMessage,setNewMessage]=useState('');const[onlineUsers]=useState(42);const[isTyping,setIsTyping]=useState(false);const messagesEndRef=useRef(null);const scrollToBottom=()=>{var _messagesEndRef$curre;(_messagesEndRef$curre=messagesEndRef.current)===null||_messagesEndRef$curre===void 0?void 0:_messagesEndRef$curre.scrollIntoView({behavior:\"smooth\"});};useEffect(()=>{scrollToBottom();},[messages]);const getCurrentTime=()=>{return new Date().toLocaleTimeString('en-US',{hour12:false,hour:'2-digit',minute:'2-digit'});};const sendMessage=()=>{if(newMessage.trim()!==''){const message={id:messages.length+1,user:\"You\",text:newMessage,time:getCurrentTime(),type:\"user\"};setMessages(prev=>[...prev,message]);setNewMessage('');// Simulate typing indicator\nsetIsTyping(true);setTimeout(()=>{setIsTyping(false);simulateResponse();},1000+Math.random()*2000);}};const simulateResponse=()=>{const responses=[{user:\"CogSec_AI\",text:\"Message received and encrypted. Awaiting neural confirmation.\",type:\"system\"},{user:\"Neural_Net\",text:\"Cognitive signature verified. Welcome to the resistance.\",type:\"success\"},{user:\"DefenseBot\",text:\"AI detection protocols active. Your thoughts are secure.\",type:\"info\"},{user:\"Firewall_7\",text:\"Neural firewall updated with your data patterns.\",type:\"system\"},{user:\"Guardian\",text:\"Transmission logged. Stay vigilant, agent.\",type:\"warning\"},{user:\"QuantumMind\",text:\"Threat level assessment complete. You're clear to proceed.\",type:\"success\"},{user:\"CipherCore\",text:\"Encrypting your neural pathways. Stand by...\",type:\"info\"}];const randomResponse=responses[Math.floor(Math.random()*responses.length)];const responseMessage={id:messages.length+2,user:randomResponse.user,text:randomResponse.text,time:getCurrentTime(),type:randomResponse.type};setMessages(prev=>[...prev,responseMessage]);};const handleKeyPress=e=>{if(e.key==='Enter'){sendMessage();}};const getMessageTypeColor=type=>{const colors={system:'#00ff41',warning:'#ffff00',success:'#00ff41',info:'#00aaff',user:'#ffffff',error:'#ff0000'};return colors[type]||'#00ff41';};return/*#__PURE__*/_jsxs(\"div\",{className:\"section connect-section\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"section-title\",children:\"SECURE COMMUNICATION CHANNEL\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"chat-header\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"header-info\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"channel-name\",children:\"ENCRYPTED NEURAL NETWORK\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"status-indicators\",children:[/*#__PURE__*/_jsxs(\"span\",{className:\"online-count\",children:[\"ACTIVE USERS: \",onlineUsers]}),/*#__PURE__*/_jsx(\"span\",{className:\"security-level\",children:\"SECURITY: MAXIMUM\"}),/*#__PURE__*/_jsx(\"span\",{className:\"encryption-status\",children:\"\\uD83D\\uDD12 ENCRYPTED\"})]})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-messages\",children:[messages.map(message=>/*#__PURE__*/_jsxs(\"div\",{className:\"message \".concat(message.type),children:[/*#__PURE__*/_jsxs(\"div\",{className:\"message-header\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"message-user\",style:{color:getMessageTypeColor(message.type)},children:message.user}),/*#__PURE__*/_jsx(\"span\",{className:\"message-time\",children:message.time})]}),/*#__PURE__*/_jsx(\"div\",{className:\"message-text\",children:message.text})]},message.id)),isTyping&&/*#__PURE__*/_jsxs(\"div\",{className:\"typing-indicator\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"typing-dots\",children:[/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{}),/*#__PURE__*/_jsx(\"span\",{})]}),/*#__PURE__*/_jsx(\"span\",{children:\"Agent is typing...\"})]}),/*#__PURE__*/_jsx(\"div\",{ref:messagesEndRef})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-input-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"input-wrapper\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"chat-input\",value:newMessage,onChange:e=>setNewMessage(e.target.value),onKeyPress:handleKeyPress,placeholder:\"Enter encrypted message...\",maxLength:500}),/*#__PURE__*/_jsx(\"div\",{className:\"input-encryption\",children:\"\\uD83D\\uDD10\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"chat-send\",onClick:sendMessage,children:\"TRANSMIT\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-footer\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"connection-status\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"status-dot\"}),\"SECURE CONNECTION ESTABLISHED\"]}),/*#__PURE__*/_jsx(\"div\",{className:\"protocol-info\",children:\"Protocol: COGSEC-ALPHA | Encryption: AES-256-NEURAL\"})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"chat-info glass-card\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Communication Guidelines\"}),/*#__PURE__*/_jsxs(\"ul\",{children:[/*#__PURE__*/_jsx(\"li\",{children:\"All messages are encrypted with neural-pattern algorithms\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Avoid discussing specific locations or personal identifiers\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Use code names and operational terminology only\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Report any suspicious activity to command immediately\"}),/*#__PURE__*/_jsx(\"li\",{children:\"Message retention: 24 hours before auto-deletion\"})]})]})]});};export default ConnectSection;","map":{"version":3,"names":["React","useState","useEffect","useRef","jsx","_jsx","jsxs","_jsxs","ConnectSection","messages","setMessages","id","user","text","time","type","newMessage","setNewMessage","onlineUsers","isTyping","setIsTyping","messagesEndRef","scrollToBottom","_messagesEndRef$curre","current","scrollIntoView","behavior","getCurrentTime","Date","toLocaleTimeString","hour12","hour","minute","sendMessage","trim","message","length","prev","setTimeout","simulateResponse","Math","random","responses","randomResponse","floor","responseMessage","handleKeyPress","e","key","getMessageTypeColor","colors","system","warning","success","info","error","className","children","map","concat","style","color","ref","value","onChange","target","onKeyPress","placeholder","maxLength","onClick"],"sources":["C:/Users/PepTheFrog/Documents/GitHub/cogsec/src/components/ConnectSection.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\nimport './ConnectSection.css';\n\nconst ConnectSection = () => {\n  const [messages, setMessages] = useState([\n    {\n      id: 1,\n      user: \"Agent_Zero\",\n      text: \"New member orientation at 1400 hours. Bring your neural dampeners.\",\n      time: \"14:32\",\n      type: \"system\"\n    },\n    {\n      id: 2,\n      user: \"MindGuard\",\n      text: \"Detected unusual AI activity in sector 7. All units maintain cognitive barriers.\",\n      time: \"14:35\",\n      type: \"warning\"\n    },\n    {\n      id: 3,\n      user: \"ThoughtShield\",\n      text: \"Successfully repelled intrusion attempt. New defense patterns uploaded to mainframe.\",\n      time: \"14:37\",\n      type: \"success\"\n    }\n  ]);\n  \n  const [newMessage, setNewMessage] = useState('');\n  const [onlineUsers] = useState(42);\n  const [isTyping, setIsTyping] = useState(false);\n  const messagesEndRef = useRef(null);\n\n  const scrollToBottom = () => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  };\n\n  useEffect(() => {\n    scrollToBottom();\n  }, [messages]);\n\n  const getCurrentTime = () => {\n    return new Date().toLocaleTimeString('en-US', {\n      hour12: false,\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const sendMessage = () => {\n    if (newMessage.trim() !== '') {\n      const message = {\n        id: messages.length + 1,\n        user: \"You\",\n        text: newMessage,\n        time: getCurrentTime(),\n        type: \"user\"\n      };\n      \n      setMessages(prev => [...prev, message]);\n      setNewMessage('');\n      \n      // Simulate typing indicator\n      setIsTyping(true);\n      setTimeout(() => {\n        setIsTyping(false);\n        simulateResponse();\n      }, 1000 + Math.random() * 2000);\n    }\n  };\n\n  const simulateResponse = () => {\n    const responses = [\n      { user: \"CogSec_AI\", text: \"Message received and encrypted. Awaiting neural confirmation.\", type: \"system\" },\n      { user: \"Neural_Net\", text: \"Cognitive signature verified. Welcome to the resistance.\", type: \"success\" },\n      { user: \"DefenseBot\", text: \"AI detection protocols active. Your thoughts are secure.\", type: \"info\" },\n      { user: \"Firewall_7\", text: \"Neural firewall updated with your data patterns.\", type: \"system\" },\n      { user: \"Guardian\", text: \"Transmission logged. Stay vigilant, agent.\", type: \"warning\" },\n      { user: \"QuantumMind\", text: \"Threat level assessment complete. You're clear to proceed.\", type: \"success\" },\n      { user: \"CipherCore\", text: \"Encrypting your neural pathways. Stand by...\", type: \"info\" }\n    ];\n    \n    const randomResponse = responses[Math.floor(Math.random() * responses.length)];\n    const responseMessage = {\n      id: messages.length + 2,\n      user: randomResponse.user,\n      text: randomResponse.text,\n      time: getCurrentTime(),\n      type: randomResponse.type\n    };\n    \n    setMessages(prev => [...prev, responseMessage]);\n  };\n\n  const handleKeyPress = (e) => {\n    if (e.key === 'Enter') {\n      sendMessage();\n    }\n  };\n\n  const getMessageTypeColor = (type) => {\n    const colors = {\n      system: '#00ff41',\n      warning: '#ffff00',\n      success: '#00ff41',\n      info: '#00aaff',\n      user: '#ffffff',\n      error: '#ff0000'\n    };\n    return colors[type] || '#00ff41';\n  };\n\n  return (\n    <div className=\"section connect-section\">\n      <h2 className=\"section-title\">SECURE COMMUNICATION CHANNEL</h2>\n      \n      <div className=\"chat-container\">\n        <div className=\"chat-header\">\n          <div className=\"header-info\">\n            <span className=\"channel-name\">ENCRYPTED NEURAL NETWORK</span>\n            <div className=\"status-indicators\">\n              <span className=\"online-count\">ACTIVE USERS: {onlineUsers}</span>\n              <span className=\"security-level\">SECURITY: MAXIMUM</span>\n              <span className=\"encryption-status\">🔒 ENCRYPTED</span>\n            </div>\n          </div>\n        </div>\n        \n        <div className=\"chat-messages\">\n          {messages.map((message) => (\n            <div key={message.id} className={`message ${message.type}`}>\n              <div className=\"message-header\">\n                <span \n                  className=\"message-user\"\n                  style={{ color: getMessageTypeColor(message.type) }}\n                >\n                  {message.user}\n                </span>\n                <span className=\"message-time\">{message.time}</span>\n              </div>\n              <div className=\"message-text\">{message.text}</div>\n            </div>\n          ))}\n          \n          {isTyping && (\n            <div className=\"typing-indicator\">\n              <div className=\"typing-dots\">\n                <span></span>\n                <span></span>\n                <span></span>\n              </div>\n              <span>Agent is typing...</span>\n            </div>\n          )}\n          \n          <div ref={messagesEndRef} />\n        </div>\n        \n        <div className=\"chat-input-container\">\n          <div className=\"input-wrapper\">\n            <input\n              type=\"text\"\n              className=\"chat-input\"\n              value={newMessage}\n              onChange={(e) => setNewMessage(e.target.value)}\n              onKeyPress={handleKeyPress}\n              placeholder=\"Enter encrypted message...\"\n              maxLength={500}\n            />\n            <div className=\"input-encryption\">🔐</div>\n          </div>\n          <button className=\"chat-send\" onClick={sendMessage}>\n            TRANSMIT\n          </button>\n        </div>\n        \n        <div className=\"chat-footer\">\n          <div className=\"connection-status\">\n            <span className=\"status-dot\"></span>\n            SECURE CONNECTION ESTABLISHED\n          </div>\n          <div className=\"protocol-info\">\n            Protocol: COGSEC-ALPHA | Encryption: AES-256-NEURAL\n          </div>\n        </div>\n      </div>\n      \n      <div className=\"chat-info glass-card\">\n        <h3>Communication Guidelines</h3>\n        <ul>\n          <li>All messages are encrypted with neural-pattern algorithms</li>\n          <li>Avoid discussing specific locations or personal identifiers</li>\n          <li>Use code names and operational terminology only</li>\n          <li>Report any suspicious activity to command immediately</li>\n          <li>Message retention: 24 hours before auto-deletion</li>\n        </ul>\n      </div>\n    </div>\n  );\n};\n\nexport default ConnectSection;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}